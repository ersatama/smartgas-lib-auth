<?php

namespace Smartgas\Auth\Tests\Unit;

use Illuminate\Support\Facades\Hash;
use Orchestra\Testbench\TestCase;
use Smartgas\Auth\Services\{
    AuthQueryService,
};
use Smartgas\Auth\Models\CrmUser;

class AuthTest extends TestCase
{
    protected AuthQueryService $authQueryService;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->authQueryService = $this->createMock(AuthQueryService::class);
    }

    /**
     * @dataProvider dataLogin
     */
    public function testLogin(array $userData)
    {
        $user = new CrmUser();
        $user->id = 1;
        $this->username = $userData['username'];
        $this->password = $userData['password'];
        $this->token = $userData['token'];
        $this->be($user);
        $this->authQueryService->method('login')->with([
            'username' => $userData['username'],
            'password' => $userData['password']
        ])->willReturn(
            $userData['token']
        );
        $token = $this->authQueryService->login([
            'username' => $userData['username'],
            'password' => $userData['password']
        ]);
        $this->assertEquals($token, $userData['token']);
    }

    public static function dataLogin(): array
    {
        $arr = [];
        for ($i = 1; $i < 10; $i++) {
            $arr[] = [
                [
                    'id' => 1,
                    'username' => 'test_1',
                    'password' => 1231231,
                    'token' => 'aasdasdasd'
                ]
            ];
        }
        return $arr;
    }
}